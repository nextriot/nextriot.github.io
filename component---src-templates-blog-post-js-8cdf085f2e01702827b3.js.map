{"version":3,"sources":["webpack:///./src/components/Signup.tsx","webpack:///./src/templates/blog-post.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Signup","BlogPostTemplate","render","post","this","props","data","mdx","siteTitle","site","siteMetadata","title","pageContext","previous","next","console","log","discussUrl","encodeURIComponent","fields","slug","Layout","location","frontmatter","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","date","readingTime","text","body","href","target","rel","fontFamily","boxShadow","textDecoration","color","to","Bio","flexWrap","justifyContent","listStyle","padding","React","Component","pageQuery","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","useMDXComponents","useMDXScope","scope","components","children","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-templates-blog-post-js-8cdf085f2e01702827b3.js","sourcesContent":["import React from 'react'\n\nconst Signup = () => {\n  return (\n    <div>\n      <p>Email Signup</p>\n    </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport { Bio, Layout, SEO, Signup } from '@/components'\nimport { rhythm, scale } from '@/utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    console.log(this.props.pageContext)\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://kylegillen.com${post.fields.slug}`\n    )}`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <article>\n          <h1>{post.frontmatter.title}</h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n              marginTop: rhythm(-4 / 5),\n            }}\n          >\n            {post.frontmatter.date}\n            {` • ${post.fields.readingTime.text}`}\n          </p>\n          <MDXRenderer>{post.body}</MDXRenderer>\n          <footer>\n            <p>\n              <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Discuss on Twitter\n              </a>\n            </p>\n          </footer>\n        </article>\n        <aside>\n          <Signup></Signup>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--header)',\n              }}\n              to={'/'}\n            >\n              Kyle Gillen\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      body\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}