{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["BlogPostTemplate","render","post","this","props","data","mdx","siteTitle","site","siteMetadata","title","pageContext","previous","next","console","log","location","frontmatter","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","date","fields","readingTime","text","body","flexWrap","justifyContent","listStyle","padding","to","slug","rel","React","Component","pageQuery","MDXRenderer","require","module","useMDXComponents","useMDXScope","scope","components","children","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"07BASMA,E,0LACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,IACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAGlB,OAFAC,QAAQC,IAAIZ,KAAKC,MAAMO,aAGrB,kBAAC,IAAD,CAAQK,SAAUb,KAAKC,MAAMY,SAAUN,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAOR,EAAKe,YAAYP,MAAOQ,YAAahB,EAAKiB,UACtD,4BAAKjB,EAAKe,YAAYP,OACtB,uBACEU,MAAK,KACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBtB,EAAKe,YAAYS,KARpB,MASSxB,EAAKyB,OAAOC,YAAYC,MAEjC,kBAAC,cAAD,KAAc3B,EAAK4B,MACnB,wBACEV,MAAO,CACLG,aAAcC,YAAO,MAGzB,kBAAC,IAAD,MAEA,wBACEJ,MAAO,CACLE,QAAQ,OACRS,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGtB,GACC,kBAAC,IAAD,CAAMuB,GAAIvB,EAASe,OAAOS,KAAMC,IAAI,QAApC,KACKzB,EAASK,YAAYP,QAI9B,4BACGG,GACC,kBAAC,IAAD,CAAMsB,GAAItB,EAAKc,OAAOS,KAAMC,IAAI,QAC7BxB,EAAKI,YAAYP,MADpB,U,GAhDiB4B,IAAMC,WA2DtBvC,YAER,IAAMwC,EAAS,c,oBChEtB,IAAMC,EAAcC,EAApB,KAEAC,UAAiB,CACfF,YAAaA,I,8kECTf,IAAMH,EAAQI,EAAd,G,EACkCA,EAAQ,IAAlCE,E,EAAAA,iBAAkBtC,E,EAAAA,IAClBuC,EAAgBH,EAAQ,KAAxBG,YAERF,UAAiB,SAAqB,GAKlC,IAJFG,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACG5C,E,oIACF,sCACK6C,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAMb,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMc,EAAS,GAGbd,MAHa,EAIbhC,OAJF,GAQM+C,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOV,EAAA,mBAA2BS,WAAYE,GAA9C","file":"component---src-templates-blog-post-js-1f4d54bf670267f99c7b.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    console.log(this.props.pageContext)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n          {` • ${post.fields.readingTime.text}`}\n        </p>\n        <MDXRenderer>{post.body}</MDXRenderer>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      body\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}